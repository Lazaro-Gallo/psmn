/* Javascript OO Module Pattern */

var qstnModule = (function () {
    var myPrivateVar, myPrivateMethod;
    // A private counter variable
    myPrivateVar = 0;
    // A private function which logs any arguments
    myPrivateMethod = function( foo ) {
        console.log( foo, qstn );
    };
  
    var $qstn, $blockDefault, $criterionDefault, $questionDefault;
    
    var initSortable = function() {
        
     /*   $('ul.qstn, ul.criterions, ul.questions, ul.alternatives').sortable({
            distance: 5,
            delay: 50,
            opacity: 0.9,
            cursor: 'move',
            forceHelperSize: true,
            axis: 'y',
            update: function() {
                
            },
            start: function(e, ui) {
                $('a.move:visible, a.delete:visible, a.expand:visible').not($(ui.item).find('form a.move:eq(0)'))
                    .addClass('vHidden');
            },
            //beforeStop: function(e, ui) {               console.log(e, ui);           },
            stop: function(e, ui) {
                 $('a.vHidden').removeClass('vHidden');
            }
        });
        //$( "ul.qstn" ).disableSelection();
        $('ul.qstn').sortable('option', 'handle', '.moveBlock');
        $('ul.criterions').sortable('option', 'handle', '.moveCriterion');
        $('ul.questions').sortable('option', 'handle', '.moveQuestion');*/
    },
    
    expand = function() {
        var $btExpand = $(this),
            $btExpandIco = $btExpand.find('span').toggleClass('minus'),
            $item = $btExpand.closest('li'),
            $btDelete = $item.find('a.delete:eq(0)').toggle(),
            $btNewItem = $item.children('a.add:eq(0)'),
            $form = $item.find('form:eq(0)'),
            $adicionalFields = $item.find('fieldset.adicionalFields:eq(0)')
            $bool = $adicionalFields.not(':visible');

            $adicionalFields.toggle($bool);

        return false;
        
        
/*
        parent.children('ul').toggle(show);
        parent.children('.add').toggleClass('hide');
        //reseta o conteúdo dos textarea
        parent.find('textarea').trigger('reset');

        //mostra tudo do formulario
        formChild.find('*').readOnly(!show).toggle(show);
        //mostra botão mover
        formChild.children('.move:eq(0)').toggleClass('hidden');

        //formChild.children('.itemContent').children('textarea.autohide, label.apoio, button').toggle();

        icosChild.toggleClass('plus').toggleClass('minus');
        return false;*/
    },
    
    newBlock = function() {
        var $block = $blockDefault.clone(true).removeClass('systemDefault');
        $qstn.append($block);
        //$block.find('a.expand:eq(0)').trigger('click');
        return false;
    },

    newCriterion = function() {
        var $block = $(this).closest('li.block'),
             $criterionsBlock = $block.find('ul.criterions'),
             $criterion = $criterionDefault.clone(true);
        $criterionsBlock.append($criterion.show());
        return false;
    },
    
    newQuestion = function() {
        var $criterion =  $(this).closest('li.criterion'),
            $questionsCriterion = $criterion.find('ul.questions')
            $question = $questionDefault.clone(true);
        $questionsCriterion.append($question.show());
        return false;
    };
  
    return {
        // A public variable
        myPublicVar: "foo",
        // A public function utilizing privates
        myPublicFunction: function( bar ) {
            // Increment our private counter
            myPrivateVar++;
            // Call our private method using bar
            myPrivateMethod( bar );
        },

        init: function() {
            $qstn = $('ul.qstn');
            $blockDefault = $qstn.find('li.block.systemDefault');
            $criterionDefault = $blockDefault.find('ul.criterions li.criterion');
            $questionDefault = $criterionDefault.find('ul.questions li.question');

            $buttons = {
            /*    'move': $qstn.find('a.move').click(function(e){
                    return false;
                }),*/
                'expand': $qstn.find('a.expand').click(expand),
                'newBlock': $('#content a.newBlock').click(newBlock),
                'newCriterion': $qstn.find('a.newCriterion').click(newCriterion),
                'newQuestion': $qstn.find('a.newQuestion').click(newQuestion)
            };
           
            
            
            /*
            $('ul.qstn a.move'));*/

            initSortable();
        //    qstn
           // $('ul.qstn a.expand').click(Qstn.expand);
            
            return this;
        }
    };

}());

//console.log('B');

$(function() {
  //  try {
        qstnModule.init();
   /* } catch(e) {
        if (APPLICATION_ENV == 'development') {
            console.log(e);
            document.write ("Outer catch caught " + e.message + "<br/>");
            alert('error');
            //Sescoop.error(e.message);
        }
    }*/
});